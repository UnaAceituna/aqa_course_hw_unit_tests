/*
1. Цикл for..of в массиве
  - Создайте массив [1,2,3,4,5,6,7,8,9,10]
  - Создайте цикл for..of, бегущий по массиву, в котором будет реализована следующая логика:
    если элемент четный - возведет его в квадрат
    если элемент нечетный - возведет его в 3ю степень

  Значение добавьте в массив 'forOf' 
*/
const forOf = [];

let arr = [1,2,3,4,5,6,7,8,9,10]
let pow = 0
for (let el of arr) {
  if (el % 2 === 0){
    pow = (el**2)
    forOf.push(pow)
  } else {
    pow = el**3
    forOf.push(pow)
  }   
}
console.log(forOf)

// 2. Методы массивов
//   - Создайте массив [1,2,3,4,5]
const newArr = [1,2,3,4,5]
//   - Добавьте в конец массива число 6 соответствующим методом
const arrFirst = newArr.push(6)
//   - Добавьте в начало массива число 0 соответствующим методом
const arrSecond = newArr.unshift(0)
//   - Удалите элемент с индексом 2 из массива соответствующим методом
const [...one] = newArr
const [, , , ...three] = newArr
const deltedEl = [...one.slice(0,2), ...three]
//   - Удалите последний элемент из массива соответствующим методом
const deletedLastEl = deltedEl.pop()
//   В результате вы должны получить массив [0, 1, 3, 4, 5], присвойте в переменную "result"

let result = deltedEl;
console.log(result)

// 
// 3. Деструктуризация массивов
//   - Создайте массив [3, 11, 32, 7, 20] 
const arr3 = [3, 11, 32, 7, 20]
//   - Через деструктуризацию получите в новые переменные первый, второй и остальные элементы массива
const [first, second, ...rest] = arr3
//   Пример: [1,2,3,4,5] => first === 1; second === 2, rest === [3,4,5]


// 4. Конкатенация массивов
//   - Создайте массив с числами [1,2,3,4,5]
const arr4 = [1,2,3,4,5]
//   - Создайте еще 1 массив с числами [6, 7, 8, 9, 10]
const arrNew4 = [6, 7, 8, 9, 10]
//   - Используйте спред оператор
const mergedArray = [...arr4, ...arrNew4]
//   Создайте переменную mergedArray, который будет хранить значения из массивов 1 и 2
console.log(mergedArray)

export { forOf, result, first, second, rest, mergedArray };